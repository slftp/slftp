[debug]
# filename of logfile (path specification possible)
debugfile=slftp.log
# 0 = error only, 1 = error and general messages, 2 = spam, 3 = NO LOG!
verbosity=0
# you can specify sections here seperated by comma (e.g. taskrace,pazo,kb), or just write verbose to catch everything
# must match exactly the specific section(s), see sourcecode variables
categories=verbose

[http]
# set it to 1 to use socks5 proxy for HTTP
enabled=0
# socks5 proxyname which should be used for HTTP
proxyname=

[console]
# width of console window after initialization
width=200
# height of console window after initialization
height=60
maxlines=1000
history_maxlines=100
customtitle=
add_time_stamp=0
no_console_msg=0
no_console_queue=0
no_console_slot=0
# show uptime on the upper left corner
show_uptime=0
# show infos about KB, IRC, RULES and STATS at the bottom right corner
show_infos=0

[ident]
# enable (1) or disable (0) ident server (port 113 needs to be available for binding)
# NOTE: on unix you need special priviledges (root) to bind port numbers less than 1024
enabled=0
# default ident reply
response=slftpuser

[sites]
# max. time we want to stay (idling) on a site (don't abuse!). Set to 0 for unlimited idle time.
maxidle=60
# time interval for sending a new idle command to site
idleinterval=25
# Value of how many times slftp should try to relogin.
maxrelogins=3
autologin=0
socks5=0
# this is some flood control, default is 5 connects per second. Value need to be in milliseconds.
delay_between_connects=200
# Set site down when out of credits. Use 0 to disable and 1 to enable it.
set_down_on_out_of_credits=0
# Set site down when out of disk space. Use 0 to disable and 1 to enable it.
set_down_on_out_of_space=1
# Number of times until relogin will use !username to login (kill ghosts). Use 0 to disable it.
killafter=0
# do NOT use unless you know what you are doing and have backups, this will split your data into 1 file per site (no undoing!)
split_site_data=0
# Internal sitename for IMDB, TVMAZE, ... tasks
admin_sitename=SLFTP
# Number of max. parallel tasks for internal site
admin_siteslots=10

[socks5]
enabled=0
host=127.0.0.1
port=11101
# if you want anonymous socks5, blank username and password fields below:
username=user
password=pw

[irc]
socks5=0
manglehost=1
sleep_on_error=30
nickname=slftp
username=slftp
realname=slftp
flood=1
timeout=1800
cmdprefix=!
register_timeout=70
echo_nick_change_events=0
echo_topic_change_events=0
echo_join_part_events=0
echo_kick_events=0
direct_echo=0
admin_forward_msgs=1

[news]
# interval in hours for showing info line if there are unread news
new_news_announce_interval=3

[timeout]
# default timeouts
connect=20
io=20

[tags]
# Regular expression for complete/incomplete dir tag, you need to match both
# Change it only if you know what you're doing
# Hint: Use https://regex101.com/ to check if your changes are valid
complete_regex=([^\w]*100%[^\w]*)|([^\w]*-\sCOMPLETE\s\)[^\w]*)|([^\w]*-\sCOMPLETE\s-[^\w]*)|([^\w].*DONE\s\-\>\s\d+F[^\w]*)|((\dM\s*\dF.*?|\d+[\w]*[^\w]*\d+[\w]*[^\w]*)(DONE|COMPLETE$|FINISH)|(\d+F[^\w].*DONE)|COMPLETE\-\d+M\_\d+F|Completed!.*?\d+)|(\s+\d+F[^\w]*-\sCOMPLETE\s\])
incomplete_regex=(\d{1,2}\s*%\s*Complete|incomplete|\d{1,2}%|\-\s*\d{1,2}DONE)

[spread]
announcetime=20

[kb]
# we keep rlses of the latest 1 week only
kb_keep_entries=604800
kb_save_entries=3600
# Set sectionnames from precatcher to use rules from !rulelist below
# For rules see !rulelist mp3
TMP3Release=MP3,MP3-*,FLAC,ABOOK
# For rules see !rulelist 0day
T0dayRelease=0DAY,PDA
# For rules see !rulelist nfo
TNFORelease=*X265*
# For rules see !rulelist imdb
TIMDBRelease=/(GER720P|GER1080P|ENG720P|ENG1080P)/,*X264SD,BLURAY*
# For rules see !rulelist tv
TTVRelease=ENGTV*,ENGTV720P*,ENGTV1080P*
# For rules see !rulelist mvid
TMVIDRelease=MVID*,MDVDR*,MBLURAY*
# List of all possible MP3 Languages for mp3language rule
mp3languages=AA AB AF AL AM AR AS AY AT AZ BA BE BG BH BI BN BO BR BY CA CG CH CN CO CV CS CY CZ DA DE DD DK DZ EE EH EL EN EO ES ET EU FA FI FJ FO FR FY GA GD GL GN GU GR HA HE HI HL HR HU HY HT IA IE IK IL IN IS IT IW JA JI JP JW KA KK KL KM KN KO KR KS KU KY LA LB LN LO LT LV LU MA MG MI MK ML MN MO MR MS MT MY MX NA NE NG NL NO OC OM OR PA PH PL PS PT QU RE RM RN RS RO RU RW SA SD SE SG SH SI SK SL SM SN SO SP SQ SR SS ST SU SY SV SW TA TE TG TH TI TK TL TN TO TR TS TT TW UA UR UZ VI VO WO XH YO YU ZA ZH ZU ZW CAT CRO DUTCH SLO SYR ESP
# defines all allowed MP3 Sources (check scene rules) for mp3source rule
mp3source_BD=BD BDR
mp3source_CD=CD CDS CDM CDA SACD CDEP BONUS_CD MCD CDR
mp3source_DVD=DVD DVDR DVDA DVDS
mp3source_HDDVD=HDDVD HDDVDR
mp3source_LIVE=AM AUD CABLE DAB DAT DVBC DVBS DVBT FM LINE MD SAT SBD RADIO FM LIVE STREAM
mp3source_TAPE=TAPE K7
mp3source_VINYL=LP VLS VINYL 7inch MLP EP
mp3source_WEB=WEB
mp3source_FLASH=FLASH
mp3source_OTHER=VHS HOME HOMEMADE BOOTLEG FREE
# defines all MP3 Types for mp3type rule
mp3types=Bootleg MAG Advance Bonus CDM CDS Concert Demo Digipak EP Live LP MCD Promo Reissue Remastered Retail Sampler Split Audiobook ABOOK INTERVIEW
# List of all possible MP3 Genres for mp3genre rule
mp3genres="Instrumental Rock" "Techno Industrial" "Instrumental Pop" "Progressive Rock" "Psychedelic Rock" "Native American" "Symphonic Rock" "Easy Listening" "Southern Rock" "Christian Rap" "National Folk" "Chamber Music" "Rhythmic Soul" "Classic Rock" "Instrumental" "Power Ballad" "Alternative" "Thrash Metal" "Heavy Metal" "Death Metal" "Black Metal" "Euro Techno" "Psychedelic" "Rock & Roll" "Fast Fusion" "Gothic Rock" "Porn Groove" "Industrial" "Soundtrack" "Sound Clip" "AlternRock" "Meditative" "Electronic" "Avantgarde" "Booty Bass" "Euro House" "Dance Hall" "Jazz+Funk" "Classical" "Eurodance" "Showtunes" "Acid Punk" "Acid Jazz" "Hard Rock" "Folk Rock" "Bluegrass" "Slow Rock" "Freestyle" "Punk Rock" "Drum Solo" "A capella" "Trip Hop" "Darkwave" "Pop Folk" "Pop Funk" "New Wave" "Big Band" "Hardcore" "Acoustic" "Symphony" "Slow Jam" "Folklore" "Country" "Hip-Hop" "Hip Hop" "New Age" "Ambient" "Gangsta" "Cabaret" "Trailer" "Musical" "Revival" "Chanson" "Grunge" "Oldies" "Reggae" "Techno" "Pranks" "Fusion" "Trance" "Gospel" "Ethnic" "Gothic" "Comedy" "Top 40" "Jungle" "Tribal" "Celtic" "Chorus" "Humour" "Speech" "Sonata" "Primus" "Satire" "Ballad" "Blues" "Dance" "Disco" "Metal" "Other" "Vocal" "House" "Noise" "Space" "Dream" "Lo Fi" "Polka" "Retro" "Swing" "Bebob" "Latin" "Indie" "Opera" "Tango" "Samba" "Funk" "Jazz" "Rock" "Acid" "Game" "Bass" "Soul" "Punk" "Cult" "Rave" "Folk" "Club" "Duet" "Pop" "R&B" "Rap" "Ska" "CPOP" "KPOP" "JPOP"
# List of all possible tv tags for tvtag rule
tvtags=AHDTV APDTV ADSR BDRip BluRay DSR DVDR DVDRip HDTV HDTVRip HR.PDTV PDTV WebRip WEB WebHD SATRip dTV
# defines operating system tags for 0daysource rule (case-insensitive)
0daysource_WIN=Win Win32 Win64 Windows WinXP WinCE WinALL
0daysource_LINUX=Linux LNX Linux64 LNX64
0daysource_UNIX=BSD FreeBSD OpenBSD NetBSD Solaris SunOS FREEBSD7 UnixAll
0daysource_MAC=MAC MACOSX OSX MACOS
0daysource_NAS=QNAP Synology
0daysource_ANDROID=Android
0daysource_IOS=iOS iPhone iPod iPad
# if a release on a site is still incomplete after try_to_complete_after seconds, slftp try to fill it from a site where its complete if set to 1 
enable_try_to_complete=0
# value in seconds after which slftp should try to fill the release again
try_to_complete_after=450
# 1 means use only sites with routes set up while 0 means ignore routes and fill incomplete releases between every site
only_use_routable_sites_on_try_to_complete=1
nomp3dirlistgenre=0
nonfodirlistgenre=0
nomvdirlistgenre=0
renamed_group_checker=1
trimmed_shit_checker=1
renamed_release_checker=1
# removes internal tag from GROUPNAME for knowngroup check
remove_internal_tag_on_knowgroup=0
# removes web tag from GROUPNAME for knowngroup check
remove_web_tag_on_knowgroup=0
# automatically add affil to site if slftp noticed a PRE catch
auto_add_affils=1
skip_rip_older_then_one_month=1

[fake]
fake__enabled=1
fake__min_release_length=10
fake__few_different_chars=6
fake__many_different_chars=40
fake__many_dots=15
fake__many_short_words_length=2
fake__many_short_words_count=6
fake__banned_words=scene test pretest pre auto deluser keke hehe "april 1" Robot Trader Deleted childporn
fake__many_vocal=30
fake_mp3_enabled=1
fake_mp3_many_dots=4
fake_mp3_min_release_length=10
fake_mp3_few_different_chars=8
fake_mp3_many_different_chars=50
fake_mp3_many_short_words_length=2
fake_mp3_many_short_words_count=6
fake_mp3_banned_words=scene test pretest pre auto deluser keke hehe "april 1" Robot Trader Deleted childporn
fake_mp3_many_vocal=30

[midnight]
# sections which will be send into daydirs somewhere
sections=MP3-*, 0DAY, PDA, /(A|E)BOOK/i, XXXPIX, MV
# tweak these two values to your localtime to represent CET!
starts=23:45
ends=00:15

[autodirlist]
# we dont even add rips older than 1 day to the KB
dropolder=86400
# delay time for sending 'SITE REQFILLED' to site after it was detected as complete
reqfill_delay=60
# 1 means if there is no complete tag (zipscript) at the destination site, compare files count to source and do SITE REQFILLED if it's the same
compare_files_for_reqfilled_fallback=1
# 1 means use only sites with routes set up while 0 means ignore routes and fill requests between every site
only_use_routable_sites_on_reqfill=0
# use the 'site search' cmd to find sources for request filling
use_site_search_on_reqfill=0
# fill requests that we find are already on the site
fill_already_on_site=0
# create a directory Already_on_site_in_PATH_TO_RLS as a hint that the rls is already on the site
create_already_on_site_in_directory=1

[speedstats]
# we save the stats every 15 minutes
save_interval=900
# we recalculate the routes every hour
recalc_routes_interval=3600
# maximum total amount of entries
max_entries=5000
# files smaller than min_filesize wont be added to speedstats file
min_filesize=5000000
# if a site has a low rank, but transfers are fast, that site can end up with a high destination
# priority at races. if this setting is enabled, speedstats will no longer change this priority
# over different ranks, but only change order within the same ranks. use !reducedspeedstatweight to set this per site.
reduced_speedstat_weight=0

[speedtest]
# when uploading a speedtest file from slftp to a site directly,
# we announce the actual speed every 20 seconds.
announce_interval=20
# set some unique string here. this is important cause bot wont be
# able to delete speedtest files uploaded by some other slftp user.
speedtest_filename_suffix=lamer
# how big file you want the tool to upload when testing "local" speed (in mbytes)
local_upload_mb=50
# file size restrictions to pick for speedtesting in megabytes
min_filesize=15
max_filesize=120

[indexer]
expect_nfo_files=liste?\.nfo
# name of database file
database=indexes.db
max_deep=5
use_custom_dirlist_command=0
custom_dirlist_command=list -al

[stats]
# 0 disables the stats database, 1 enables stats database filling
enabled=1
# name of database file
database=stats.db
# files smaller than min_filesize wont be added stats database
min_filesize=100000

[backup]
# folder where backup files should be saved
# can even be somewhere else than slftp dir; e.g. /home/anotheruser/slbackup
# but always take care it's writable
backup_dir=backup
# 1 for creating backup on startup; 0 to disable it
run_backup_on_startup=1
# number of backup files to keep, old ones are being deleted
keep_backups=10
# use zero here to turn off; else specify backup interval in seconds
backup_interval=0
# list of files which won't be included in all backups (separated by comma)
skipfiles=

[ranks]
# if there is a race and only you have only a few number of sites where its allowed
# its probably better to skip giving points, since it might hook up/down some sites
# inaccurately. with percent_of_sites_to_score you can tweak this, for example,
# if you have 10 mp3 sites and only 3 of them allow foreign stuffs and only 2 of them
# allow tape. With percent_of_sites_to_score=30 we will give points in the
# foreign mp3 races but we wont do it in -tape- races
percent_of_sites_to_score=30
save_interval=900
recalc_ranks_interval=1800

[taskrace]
# if there is no change in dirlisting for 300 seconds, we give up.
newdir_max_unchanged=300
newdir_max_empty=300
newdir_max_created=600
# if a dirlist is not complete, we start dirlisting again 100 millisecond later
newdir_dirlist_readd=100
# the bot keep stats about CRC-Check: Bad events on transfer (per race),
# if it reaches badcrcevents, no dirlist will be added again to the src site.
badcrcevents=15
convert_filenames_to_lowercase=1
# Automatic rule add to skip GROUP if 'releases are not accepted here' or 'This group is BANNED' occur while MKDIR on site
autoruleadd=1

[taskgenredirlist]
# attempts to try to get genre from dirlist
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[taskgenrenfo]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[taskmvid]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[tasknulldaynfo]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[taskgame]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[tasksitenfo]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[dbaddimdb]
# enable/disable showing of IMDB Info in IRC after it's fetched
post_lookup_infos=0
# If enabled, no imdb lookup will be performed for tv releases
skip_tv_releases=0

[taskimdb]
# attempts to try again to get rls nfo from site if no nfo was found
readd_attempts=5
# time in seconds to wait for new attemp if no nfo was found in dir
readd_interval=3

[tasktvinfo]
# name of database file
database=tvinfos.db
# number of days after TV Info in database should be updated
days_between_last_update=6
# enable/disable showing of TV Info in IRC after it's fetched
post_lookup_infos=0
# attemps for retrying lookup if failed
readd_attempts=3
# time to wait for next looukp if failed
readd_interval=3
# Syntax: <addcmd> rls tvmazeid
addcmd=!addtvmaze
# Standard number of results for !addtvinfo -s
max_sid_lookup_results=3
stop_on_englishcheck=0
# 1 for new style - 0 for old style with dots
use_new_announce_style=1

[taskidle]
idlecommands=REST 0,STAT -l,PASV,CWD .

[queue]
# 0 to disable; 1 to enable queue cleanup
enable_queueclean=0
# time in seconds when slftp should do a queue cleanup
queueclean_interval=600
# time after unassigned tasks get removed
queueclean_unassigned=600
# time after assigned tasks with long runtime get removed
queueclean_maxrunning=900
# max try to assign a task
maxassign=200
# delay in seconds for a new try to assign tasks
maxassign_delay=15
# Time in ms
queue_fire=900
# Files/subdirs priorities (0=no sorting, 1=first, 2=last)
# Determine the upload priority for subdirectories
sample_dirs_priority=1
proof_dirs_priority=2
cover_dirs_priority=2
subs_dirs_priority=2
# Determine the upload priority for files
image_files_priority=2
video_files_priority=2

[taskpretime]
# 0 = No Pretime fetch, 1 = Over HTTP (set url correctly below), 2 = Over inbuilt MYSQL Connection, 3 = over sqlite (addpre channel needed to fill it).
mode=0
# Allows you to have a second source for lookup incase mode= fails
mode_2=0
# attemps for retrying pretime check if failed
readd_attempts=5
# time to wait for next pretime check if failed
readd_interval=3
# define a global max pretime for all sites and sections
default_pretime=600
# URL to your php script that supplies pre information like this:
# RELEASENAME UNIXTIMESTAMP FILES SIZE
# For unknown pretime deliver a blank page
# %s is the token where the releasename gets inserted
url=http://127.0.0.1/pretime.php?text=%s

[dirlist]
# files which shouldn't be added to dirlist; those files never will be traded because they are unknown for slftp
global_skip_files=^(tvmaze|imdb)\.nfo$|\-missing$|\-offline$|^\.|^file\_id\.diz$|\.htm$|\.html|\.bad$|\[IMDB\]\W+
# directories which shouldn't be added to dirlist; those directories never will be traded because they are unknown for slftp
global_skip_dirs=\[IMDB\]\W+|\[TvMaze\]\W+
# global setting for skip being uploaded files on FTPd
# Allowed values:
# 0: Skip 0byte files (files which are in the process of being transferred very soon by someone)
# 1: Skip 0byte files and being uploaded files (This actually works only with glFTPd sites, files will be considered complete on other FTPd softwares.)
# 2: Neither skip being uploaded files nor 0byte files
skip_being_uploaded_files=0

[precatcher]
recursiv_mapping=1
precatcher_debug=0
debugfile=precatcher.log

[dbaddpre]
addprecmd=!addpre,!sitepre
addpreechocmd=!sitepre
# name of database file if SQLite is used
database=db_addpre.db
# What DB to load: 1 = SQLITE, 2 = MySQL  
mode=1

[mysql]
# ip adress or hostname
host=0
# listening port of database management system
port=3306
# username
user=dbuser
# password
pass=dbpass
# database name for addpre infos
dbname=slftp-addpre
# type of database management system (slftp selects library based on this setting)
# values: MySQL or MariaDB
dbms=

[taskmysqlpretime]
# tablename for addpre infos 
tablename=addpre
# fieldname for releasename in database
rlsname_field=rls
# fieldname for rls section
section_field=section
# fieldname for timestamp of a specific release
rlsdate_field=ts
# fieldname for extra info from where the release was added
# -1 means disabled and that a column does not exist
source_field=-1

[prebot]
# delay in seconds before re-checking the predir to see if executing precmd failed or not
# if the release is still in the predir you will be notified
# the next job in the batch queue will only start after this delay has passed and the check has been performed
predir_re_examine_time=5
